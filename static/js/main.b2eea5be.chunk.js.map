{"version":3,"sources":["components/Header.jsx","context/AppReducer.jsx","context/GlobalState.jsx","components/Balance.jsx","components/IncomeExpenses.jsx","components/Transaction.jsx","components/TransactionList.jsx","components/AddTransaction.jsx","App.jsx","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","text","amount","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","Math","abs","onClick","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b2eea5be.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Header = () => {\n    return (\n        <h2>\n            Expense Tracker\n        </h2>\n    )\n}\n","export default (state, action) => {\n  switch (action.type) {\n    case 'DELETE_TRANSACTION':\n      return {\n        ...state,\n        transactions: state.transactions.filter(\n          transaction => transaction.id !== action.payload\n        )\n      }\n      case 'ADD_TRANSACTION':\n        return {\n          ...state,\n          transactions: [action.payload, ...state.transactions]\n        }\n        \n    default:\n      return state;\n  }\n}","import React, { createContext, useReducer } from 'react';\nimport  AppReducer  from './AppReducer';\n\nconst initialState = {\n    transactions: [\n        { id: 1, text: 'Flower', amount: -20 },\n        { id: 2, text: 'Salary', amount: 300 },\n        { id: 3, text: 'Book', amount: -10 },\n        { id: 4, text: 'Camera', amount: 150 }\n    ]\n}\n\n//create context\nexport const GlobalContext = createContext(initialState);\n\n// Provider component\nexport const GlobalProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(AppReducer, initialState)\n    \n    // Actions\n    function deleteTransaction(id) {\n        dispatch({\n            type: 'DELETE_TRANSACTION',\n            payload: id\n        })\n    }\n\n    function addTransaction(transaction) {\n        dispatch({\n            type: 'ADD_TRANSACTION',\n            payload: transaction\n        })\n    }\n\n    return (<GlobalContext.Provider value={{\n        transactions: state.transactions,\n        deleteTransaction,\n        addTransaction\n    }} >\n        {children}\n    </GlobalContext.Provider>)\n}","import React, { useContext } from 'react'\nimport { GlobalContext } from '../context/GlobalState'\n\nexport const Balance = () => {\n\n    const { transactions } = useContext(GlobalContext);\n\n    const amounts = transactions.map(transaction => transaction.amount);\n\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n\n    return (\n        <div>\n            <h4>Your Balance</h4>\n            <h1>${total}</h1>\n        </div>\n    )\n}\n","import React, { useContext } from 'react'\nimport { GlobalContext } from '../context/GlobalState'\n\nexport const IncomeExpenses = () => {\n\n  const { transactions } = useContext(GlobalContext);\n  const amounts = transactions.map(transaction => transaction.amount);\n\n  const income = amounts\n    .filter(item => item > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  const expense = (\n    amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\n    -1\n  ).toFixed(2);\n\n    return (\n    \n    <div className=\"inc-exp-container\">\n        <div>\n          <h4>Income</h4>\n          <p className=\"money plus\">{income}</p>\n        </div>\n        <div>\n          <h4>Expense</h4>\n          <p className=\"money minus\">{expense}</p>\n        </div>\n    </div> \n    )\n}\n","import React, { useContext } from 'react'\nimport { GlobalContext } from '../context/GlobalState'\n\n\nexport const Transaction = ({ transaction }) => {\n  \n    const { deleteTransaction } = useContext(GlobalContext)\n    const sign = transaction.amount >=0 ? '+' : '-';\n\n    return (\n        <div>\n            <li className={transaction.amount < 0 ? 'minus' : 'plus' }>\n                {transaction.text} <span>{sign}${Math.abs(transaction.amount)}</span><button \n                onClick={() => deleteTransaction(transaction.id)} className=\"delete-btn\">x</button>\n            </li>\n        </div>\n    )\n}\n","import React,  { useContext }  from 'react'\nimport { GlobalContext } from '../context/GlobalState'\nimport { Transaction } from './Transaction'\n\nexport const TransactionList = () => {\n\n   const { transactions } = useContext(GlobalContext);\n\n    return (\n        <div>\n            <h3>History</h3>\n                <ul className=\"list\">\n                {transactions.map(transaction => (<Transaction key={transaction.id} transaction={transaction} />))}\n                </ul>\n        </div>\n    )\n}\n","import React, { useState, useContext } from 'react'\nimport { GlobalContext } from '../context/GlobalState'\n\nexport const AddTransaction = () => {\n\n    const [text , setText] = useState('');\n    const [amount , setAmount] = useState(0);\n\n    const { addTransaction } = useContext(GlobalContext);\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        const newTransaction = {\n            id: Math.floor(Math.random() * 100000000),\n            text,\n            amount: +amount\n        }\n\n        addTransaction(newTransaction);\n    }\n\n    return (\n        <div>\n            <h3>Add new transaction</h3>\n            <form onSubmit={onSubmit}>\n                <div className=\"form-control\">\n                    <label htmlFor=\"text\">Text</label>\n                    <input type=\"text\" value={text} onChange={(e)=>setText(e.target.value)} \n                    placeholder=\"Enter text...\" />\n                </div>\n                <div className=\"form-control\">\n                    <label htmlFor=\"amount\">Amount <br />\n                        (negative - expense, positive - income)</label>\n                    <input type=\"number\" value={amount} onChange={(e)=>setAmount(e.target.value)} \n                    placeholder=\"Enter amount...\" />\n                </div>\n                <button className=\"btn\">Add transaction</button>\n            </form>\n        </div>\n    )\n}\n","import './App.css';\nimport { Header } from './components/Header';\nimport { Balance } from './components/Balance';\nimport { IncomeExpenses } from './components/IncomeExpenses';\nimport { TransactionList } from './components/TransactionList';\nimport { AddTransaction } from './components/AddTransaction';\n\nimport { GlobalProvider } from './context/GlobalState'\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport   App  from './App';\n\n\nReactDOM.render(\n \n    <App />,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}